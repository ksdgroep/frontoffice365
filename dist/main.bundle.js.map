{"version":3,"sources":["webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/basket/basket.component.html","webpack:///./src/app/confirmation/confirmation.component.html","webpack:///./src/app/contactinfo/contactinfo.component.html","webpack:///./src/app/courseselection/courseselection.component.html","webpack:///./src/app/paymentinfo/paymentinfo.component.html","webpack:///./src/app/services/global-functions.service.ts","webpack:///./src/app/bll/student.ts","webpack:///./src/app/services/country.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/basket/basket.component.ts","webpack:///./src/app/bll/company.ts","webpack:///./src/app/bll/contactperson.ts","webpack:///./src/app/bll/order.ts","webpack:///./src/app/confirmation/confirmation.component.ts","webpack:///./src/app/contactinfo/contactinfo.component.ts","webpack:///./src/app/courseselection/courseselection.component.ts","webpack:///./src/app/helpers/currencyformat.ts","webpack:///./src/app/helpers/dutchdateformat.ts","webpack:///./src/app/paymentinfo/paymentinfo.component.ts","webpack:///./src/app/services/course.service.ts","webpack:///./src/app/services/coursetemplate.service.ts","webpack:///./src/app/services/enrol.service.ts","webpack:///./src/app/services/region.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://api.viper365beta.nl',\n  apiKey: 'A20EC0A0-F5F2-4499-96B0-10370A8E7854',\n  contactEmail: 'info@ksdgroep.nl'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 151\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav nav-tabs\\\" role=\\\"tablist\\\">\\n                <li role=\\\"presentation\\\" [class.active]=\\\"selectedTab == 'courseSelect'\\\" [class.disabled]=\\\"enabledTabCount == 4\\\">\\n                    <a aria-controls=\\\"courseSelect\\\" role=\\\"tab\\\" (click)=\\\"selectTab('courseSelect')\\\">Stap 1: Inschrijven cursus\\n                        <span class=\\\"sr-only\\\">(current)</span>\\n                    </a>\\n                </li>\\n                <li role=\\\"presentation\\\" [class.active]=\\\"selectedTab == 'contactInfo'\\\" [class.disabled]=\\\"enabledTabCount < 2 || enabledTabCount == 4\\\">\\n                    <a aria-controls=\\\"contactInfo\\\" role=\\\"tab\\\" (click)=\\\"selectTab('contactInfo')\\\">Stap 2: Contactgegevens</a>\\n                </li>\\n                <li role=\\\"presentation\\\" [class.active]=\\\"selectedTab == 'paymentInfo'\\\" [class.disabled]=\\\"enabledTabCount < 3 || enabledTabCount == 4\\\">\\n                    <a aria-controls=\\\"paymentInfo\\\" role=\\\"tab\\\" (click)=\\\"selectTab('paymentInfo')\\\">Stap 3: Betaalgegevens</a>\\n                </li>\\n                <li role=\\\"presentation\\\" [class.active]=\\\"selectedTab == 'signupConfirmed' || selectedTab == 'signupFailed'\\\" [class.disabled]=\\\"enabledTabCount < 4\\\">\\n                    <a aria-controls=\\\"signupConfirmed\\\" role=\\\"tab\\\" (click)=\\\"selectTab('signupConfirmed')\\\">Stap 4: Inschrijving voltooid</a>\\n                </li>\\n            </ul>\\n        </div>\\n        <!-- /.navbar-collapse -->\\n    </div>\\n    <!-- /.container-fluid -->\\n</nav>\\n\\n<div class=\\\"container course-selection\\\">\\n    <div class=\\\"row\\\">\\n        <!-- When hiding the sidebar give col-sm-12 to this container -->\\n        <div class=\\\"col-xs-12 col-sm-7\\\" id=\\\"main-content\\\" [class.col-sm-7]=\\\"selectedTab != 'signupConfirmed' && selectedTab != 'signupFailed'\\\" [class.col-sm-12]=\\\"selectedTab == 'signupConfirmed' || selectedTab == 'signupFailed'\\\">\\n            <div class=\\\"tab-content\\\">\\n                <div [class.active]=\\\"selectedTab == 'courseSelect'\\\" role=\\\"tabpanel\\\" class=\\\"tab-pane fade in\\\" id=\\\"courseSelect\\\">\\n                    <fo-courseselection></fo-courseselection>\\n                </div>\\n                <div [class.active]=\\\"selectedTab == 'contactInfo'\\\" role=\\\"tabpanel\\\" class=\\\"tab-pane fade in\\\" id=\\\"contactInfo\\\">\\n                    <fo-contactinfo></fo-contactinfo>\\n                </div>\\n                <div [class.active]=\\\"selectedTab == 'paymentInfo'\\\" role=\\\"tabpanel\\\" class=\\\"tab-pane fade in\\\" id=\\\"paymentInfo\\\">\\n                    <fo-paymentinfo></fo-paymentinfo>\\n                </div>\\n                <div [class.active]=\\\"selectedTab == 'signupConfirmed' || selectedTab == 'signupFailed'\\\" role=\\\"tabpanel\\\" class=\\\"tab-pane fade in\\\" id=\\\"signupConfirmed\\\">\\n                    <fo-confirmation *ngIf=\\\"!errors\\\"></fo-confirmation>\\n                    <div *ngIf=\\\"errors\\\">\\n                        <h2>Uw inschrijving is niet voltooid</h2>\\n                        <div class=\\\"form-group \\\">\\n                            <label class=\\\"col-xs-12 col-sm-2 \\\">Er is iets misgegaan</label>\\n                            <div class=\\\"col-xs-12 col-sm-10 \\\">\\n                                <p>Ga terug naar stap 1 of neem <a href=\\\"mailto:{{providerContactMail}}\\\">contact</a> op met de cursus aanbieder.</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"hidden-xs col-sm-1\\\">\\n            <!-- Spacing -->\\n        </div>\\n\\n        <!-- Hide sidebar on tab 4 & 5 -->\\n        <!-- When hiding the sidebar give col-sm-12 to the main content container (line 49)s -->\\n        <div *ngIf=\\\"selectedTab != 'signupConfirmed' && selectedTab != 'signupFailed'\\\" class=\\\"col-xs-12 col-sm-3\\\">\\n            <fo-basket></fo-basket>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 152\n// module chunks = 1","module.exports = \"<div class=\\\"sidebar-container\\\">\\n    <h4>Uw keuze</h4>\\n    <ul *ngIf=\\\"selectedCourse\\\">\\n        <li class=\\\"sidebar-item-title\\\">Geselecteerde cursus</li>\\n        <li>{{selectedCourse.Name}}</li>\\n        <br/>\\n        <li class=\\\"sidebar-item-title\\\">Startdatum</li>\\n        <li>{{selectedCourse.Date | date: 'dd-MM-yyyy' }}</li>\\n        <br/>\\n        <li class=\\\"sidebar-item-title\\\">Regio</li>\\n        <li>{{selectedCourse.Region}}</li>\\n        <br/>\\n        <li class=\\\"sidebar-item-title\\\">Lesdagen</li>\\n        <li *ngFor=\\\"let courseDay of selectedCourse.CourseDays\\\">{{courseDay.Date | dutchDateFormat }} <span>{{courseDay.TimeFrom}} - {{courseDay.TimeTill}}</span></li>\\n        <br/>\\n        <li class=\\\"sidebar-item-title\\\">Prijs van uw cursus</li>\\n        <li>{{selectedCourse.Price * (studentCount == 0 ? 1 : studentCount) | currencyFormat}} <span>excl. BTW</span></li>\\n        <br/>\\n        <li class=\\\"sidebar-item-title\\\">Aantal deelnemers</li>\\n        <li>{{studentCount}}</li>\\n    </ul>\\n    <ul *ngIf=\\\"!selectedCourse\\\">\\n        <li>U heeft nog geen cursus geselecteerd.</li>\\n        <br/>\\n        <li>Selecteer een cursus om verder te gaan</li>\\n    </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basket/basket.component.html\n// module id = 153\n// module chunks = 1","module.exports = \"<h2>Uw inschrijving</h2>\\n<div class=\\\"col-xs-12 col-sm-6\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 control-label\\\">Hartelijk dank</label>\\n        <div class=\\\"col-xs-12 col-sm-9\\\">\\n            <p>U ontvangt een e-mail ter bevestiging.</p>\\n            <br/>\\n            <p>Uw inschrijving is voltooid voor de cursus:</p>\\n            <p class=\\\"signupConfirmedTitle\\\">{{course?.Name}}</p>\\n            <p class=\\\"signupConfirmedTitle\\\">Startdatum</p>\\n            <p class=\\\"signupConfirmedContent\\\">{{course?.Date | dutchDateFormat }}</p>\\n            <p class=\\\"signupConfirmedTitle\\\">Regio</p>\\n            <p class=\\\"signupConfirmedContent\\\">{{course?.Region}}</p>\\n            <p class=\\\"signupConfirmedTitle\\\">Lesdagen</p>\\n            <ul class=\\\"signupConfirmedDayList\\\">\\n                <li *ngFor=\\\"let courseDay of course?.CourseDays\\\">{{courseDay.Date | dutchDateFormat }} <span>{{courseDay.TimeFrom}} - {{courseDay.TimeTill}}</span></li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"col-xs-12 col-sm-6\\\">\\n    <p>De volgende deelnemers hebben zich ingeschreven:</p>\\n    <br/>\\n    <ul class=\\\"participants-list\\\" *ngFor=\\\"let student of order?.Students; let index = index\\\">\\n        <li>Deelnemer {{index + 1}}</li>\\n        <li>{{student.Initials}} {{student.Surname}}</li>\\n        <li>{{student.Address}} {{student.AddressNumber}}</li>\\n        <li>{{student.PostalCode}} {{student.City}}</li>\\n        <li>{{student.Email}}</li>\\n    </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/confirmation/confirmation.component.html\n// module id = 154\n// module chunks = 1","module.exports = \"<h2 class=\\\"no-margin-bottom\\\">Contactgegevens</h2>\\n<h4 class=\\\"subtitle\\\">Met wie mogen wij contact opnemen?</h4>\\n<form class=\\\"form-horizontal\\\" data-toggle=\\\"validator\\\" (ngSubmit)=\\\"saveInfo(contactForm.valid)\\\" #contactForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"optionGender.errors && (optionGender.dirty || optionGender.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"optionGender.errors && (optionGender.dirty || optionGender.touched || contactForm.submitted)\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 col-md-3 control-label\\\">Aanhef</label>\\n        <div class=\\\"col-xs-12 col-sm-4 col-md-7\\\">\\n            <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"optionGender\\\" value=\\\"V\\\" [(ngModel)]=\\\"order.ContactPerson.Gender\\\" required #optionGender=\\\"ngModel\\\"> Mevrouw\\n            </label>\\n            <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"optionGender\\\" value=\\\"M\\\" [(ngModel)]=\\\"order.ContactPerson.Gender\\\" required #optionGender=\\\"ngModel\\\"> De heer\\n            </label>\\n            <label *ngIf=\\\"optionGender.errors && (optionGender.dirty || optionGender.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Gelieve een aanhef te selecteren.</label>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"initials.errors && (initials.dirty || initials.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"initials.errors && (initials.dirty || initials.touched || contactForm.submitted)\\\">\\n        <label for=\\\"initials\\\" class=\\\"col-xs-12 col-sm-3 control-label\\\">Voorletters</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"initials\\\" name=\\\"initials\\\" [(ngModel)]=\\\"order.ContactPerson.Initials\\\" required #initials=\\\"ngModel\\\">\\n            <span *ngIf=\\\"initials.errors && (initials.dirty || initials.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n            <label *ngIf=\\\"initials.errors && (initials.dirty || initials.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Voorletters zijn verpllicht.</label>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Voornaam<br/><span>Optioneel</span></label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"order.ContactPerson.FirstName\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"middleName \\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Tussenvoegsel<br/><span>Optioneel</span></label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"middleName\\\" name=\\\"middleName\\\" [(ngModel)]=\\\"order.ContactPerson.MiddleName\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"lastName.errors && (lastName.dirty || lastName.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"lastName.errors && (lastName.dirty || lastName.touched || contactForm.submitted)\\\">\\n        <label for=\\\"lastName\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Achternaam</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"order.ContactPerson.Surname\\\" required #lastName=\\\"ngModel\\\">\\n            <span *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n            <label *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Achternaam is verpllicht.</label>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 control-label\\\">Type inschrijving</label>\\n        <div class=\\\"col-xs-12 col-sm-4 col-md-7\\\">\\n            <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"optionType\\\" value=\\\"Private\\\" [(ngModel)]=\\\"order.OrderType\\\"> Particulier\\n            </label>\\n            <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"optionType\\\" value=\\\"Company\\\" [(ngModel)]=\\\"order.OrderType\\\"> Zakelijk\\n            </label>\\n        </div>\\n    </div>\\n\\n    <!-- Zakelijke inschrijving -->\\n\\n    <div *ngIf=\\\"order.OrderType == 'Company'\\\" class=\\\"form-group\\\" [class.has-error]=\\\"companyName.errors && (companyName.dirty || companyName.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"companyName.errors && (companyName.dirty || companyName.touched || contactForm.submitted)\\\">\\n        <label for=\\\"business\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Bedrijf</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"business\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"order.Company.Name\\\" required #companyName=\\\"ngModel\\\">\\n            <span *ngIf=\\\"companyName.errors && (companyName.dirty || companyName.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n            <label *ngIf=\\\"companyName.errors && (companyName.dirty || companyName.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Bedrijfsnaam is verpllicht.</label>\\n        </div>\\n    </div>\\n\\n    <!-- -->\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"postalcodeBusiness\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Postcode<br/><span>Optioneel</span></label>\\n        <div class=\\\"col-sm-6\\\">\\n            <div class=\\\"form-group row\\\">\\n                <div class=\\\"col-sm-5 col-xs-12 margin-bottom-15\\\">\\n                    <input id=\\\"postalcodeBusiness\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"postalCode\\\" [(ngModel)]=\\\"order.ContactPerson.PostalCode\\\">\\n                </div>\\n                <label for=\\\"numberBusiness\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label margin-bottom-15\\\">Nummer<br/><span>Optioneel</span></label>\\n                <div class=\\\"col-sm-4 col-xs-12\\\">\\n                    <input id=\\\"numberBusiness\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"number\\\" [(ngModel)]=\\\"order.ContactPerson.AddressNumber\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"addressBusiness\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Straat<br/><span>Optioneel</span></label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"addressBusiness\\\" name=\\\"address\\\" [(ngModel)]=\\\"order.ContactPerson.Address\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"placeBusiness\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Plaats<br/><span>Optioneel</span></label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"placeBusiness\\\" name=\\\"place\\\" [(ngModel)]=\\\"order.ContactPerson.City\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"countryBusiness\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Land<br/><span>Optioneel</span></label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <select class=\\\"form-control\\\" id=\\\"countryBusiness\\\" [(ngModel)]=\\\"order.ContactPerson.CountryId\\\" name=\\\"countrySelection\\\">\\n                <option *ngFor=\\\"let c of countries\\\" [ngValue]=\\\"c.Id\\\">{{c.Name}}</option>\\n            </select>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"emailBusiness.errors && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"emailBusiness.errors && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\">\\n        <label for=\\\"emailBusiness\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">E-mail</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailBusiness\\\" name=\\\"email\\\" [(ngModel)]=\\\"order.ContactPerson.Email\\\" #emailBusiness=\\\"ngModel\\\" required pattern=\\\"[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\\"\\n            />\\n            <span *ngIf=\\\"emailBusiness.errors && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n            <label *ngIf=\\\"emailBusiness.hasError('required') && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">E-mail is verpllicht.</label>\\n            <label *ngIf=\\\"emailBusiness.hasError('pattern') && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Geef een geldig e-mailadres op.</label>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"phoneBusiness\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Telefoon<br/><span>Optioneel</span></label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneBusiness\\\" name=\\\"phone\\\" [(ngModel)]=\\\"order.ContactPerson.Phone\\\">\\n        </div>\\n    </div>\\n\\n    <hr class=\\\"divider\\\" />\\n\\n    <h2>Deelnemers</h2>\\n\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 control-label\\\">Bent u zelf deelnemer?</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <label class=\\\"checkbox-inline\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"participantInfo\\\" [(ngModel)]=\\\"order.FirstStudentIsContact\\\" (change)=\\\"toggleSelf()\\\" > Ja, gebruik hiervoor de contactgegevens\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 control-label\\\">Schrijft u in voor een ander?</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <label class=\\\"checkbox-inline\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"extraParticipant\\\" [(ngModel)]=\\\"addMultipleStudents\\\" (change)=\\\"toggleStudents()\\\"> Extra deelnemer(s) toevoegen\\n            </label>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"addMultipleStudents\\\" class=\\\"form-group\\\" name=\\\"studentLabel\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 control-label\\\">Andere deelnemers</label>\\n    </div>\\n    <div *ngFor=\\\"let s of order.Students; let index = index\\\" class=\\\"participant-block\\\" name=\\\"studentList\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-xs-12 col-sm-3 control-label participant-title\\\">Deelnemer 1</label>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"studentGender.errors && (studentGender.dirty || studentGender.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"studentGender.errors && (studentGender.dirty || studentGender.touched || contactForm.submitted)\\\">\\n            <label class=\\\"col-xs-12 col-sm-3 control-label\\\">Aanhef</label>\\n            <div class=\\\"col-xs-12 col-sm-4 col-md-7\\\">\\n                <label class=\\\"radio-inline\\\">\\n                    <input type=\\\"radio\\\" name=\\\"optionGender_{{index}}\\\" value=\\\"V\\\" [(ngModel)]=\\\"s.Gender\\\" required #studentGender=\\\"ngModel\\\"> Mevrouw\\n                </label>\\n                <label class=\\\"radio-inline\\\">\\n                    <input type=\\\"radio\\\" name=\\\"optionGender_{{index}}\\\" value=\\\"M\\\" [(ngModel)]=\\\"s.Gender\\\" required #studentGender=\\\"ngModel\\\"> De heer\\n                </label>\\n                <label *ngIf=\\\"studentGender.errors && (studentGender.dirty || studentGender.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Gelieve een aanhef te selecteren.</label>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"studentInitials.errors && (studentInitials.dirty || studentInitials.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"studentInitials.errors && (studentInitials.dirty || studentInitials.touched || contactForm.submitted)\\\">\\n            <label for=\\\"initialsParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label\\\">Voorletters</label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"initialsParticipant\\\" name=\\\"initials_{{index}}\\\" [(ngModel)]=\\\"s.Initials\\\" required #studentInitials=\\\"ngModel\\\">\\n                <span *ngIf=\\\"studentInitials.errors && (studentInitials.dirty || studentInitials.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n                <label *ngIf=\\\"studentInitials.errors && (studentInitials.dirty || studentInitials.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Voorletters zijn verpllicht.</label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"firstNameParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Voornaam<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstNameParticipant\\\" name=\\\"firstName_{{index}}\\\" [(ngModel)]=\\\"order.Students[index].FirstName\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"middleNameParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Tussenvoegsel<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"middleNameParticipant\\\" name=\\\"middleName_{{index}}\\\" [(ngModel)]=\\\"s.MiddleName\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"studentLastName.errors && (studentLastName.dirty || studentLastName.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"studentLastName.errors && (studentLastName.dirty || studentLastName.touched || contactForm.submitted)\\\">\\n            <label for=\\\"lastNameParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label\\\">Achternaam</label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastNameParticipant\\\" name=\\\"lastName_{{index}}\\\" [(ngModel)]=\\\"s.Surname\\\" required #studentLastName=\\\"ngModel\\\">\\n                <span *ngIf=\\\"studentLastName.errors && (studentLastName.dirty || studentLastName.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n                <label *ngIf=\\\"studentLastName.errors && (studentLastName.dirty || studentLastName.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Achternaam is verpllicht.</label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"privatePostalcodeParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Postcode<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-sm-5 col-xs-12 margin-bottom-15\\\">\\n                        <input id=\\\"privatePostalcodeParticipant\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"postalCode_{{index}}\\\" [(ngModel)]=\\\"s.PostalCode\\\">\\n                    </div>\\n                    <label for=\\\"privateNumberParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label margin-bottom-15\\\">Nummer<br/><span>Optioneel</span></label>\\n                    <div class=\\\"col-sm-4 col-xs-12\\\">\\n                        <input id=\\\"privateNumberParticipant\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"addressNumber_{{index}}\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"privateAddressParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Straat<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"privateAddressParticipant\\\" name=\\\"address_{{index}}\\\" [(ngModel)]=\\\"s.Address\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"privatePlaceParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Plaats<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"privatePlaceParticipant\\\" name=\\\"place_{{index}}\\\" [(ngModel)]=\\\"s.City\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"privateCountryParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Land<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <select class=\\\"form-control\\\" id=\\\"privateCountryParticipant\\\" name=\\\"country_{{index}}\\\" [(ngModel)]=\\\"s.CountryId\\\">\\n                    <option *ngFor=\\\"let c of countries\\\" [ngValue]=\\\"c.Id\\\">{{c.Name}}</option>\\n                </select>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"phoneNumberParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Telefoonnummer<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneNumberParticipant\\\" name=\\\"phone_{{index}}\\\" [(ngModel)]=\\\"s.Phone\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"studentEmail.errors && (studentEmail.dirty || studentEmail.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"studentEmail.errors && (studentEmail.dirty || studentEmail.touched || contactForm.submitted)\\\">\\n            <label for=\\\"emailParticipant\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">E-mail adres</label>\\n            <div class=\\\"col-xs-12 col-sm-6 \\\">\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailParticipant\\\" name=\\\"email_{{index}}\\\" [(ngModel)]=\\\"s.Email\\\" required pattern=\\\"[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\\"\\n                    #studentEmail=\\\"ngModel\\\">\\n                <span *ngIf=\\\"studentEmail.errors && (studentEmail.dirty || studentEmail.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n                <label *ngIf=\\\"studentEmail.hasError('required') && (studentEmail.dirty || studentEmail.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">E-mail is verpllicht.</label>\\n                <label *ngIf=\\\"studentEmail.hasError('pattern') && (studentEmail.dirty || studentEmail.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Geef een geldig e-mailadres op.</label>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group participant-control\\\">\\n            <div class=\\\"col-xs-12 col-sm-9 text-right\\\">\\n                <a class=\\\"btn btn-link delete-participant\\\" (click)=\\\"removeStudent(s)\\\">Verwijder deelnemer</a>\\n                <br/>\\n                <a class=\\\"btn btn-link\\\" (click)=\\\"addStudent()\\\">Voeg nieuwe deelnemer toe</a>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <hr class=\\\"divider\\\" />\\n\\n    <h2>Vragen of opmerkingen</h2>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 control-label optional optional-label\\\" for=\\\"questions\\\">Optioneel</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <textarea class=\\\"form-control\\\" id=\\\"questions\\\" rows=\\\"10\\\" [(ngModel)]=\\\"order.Remarks\\\" name=\\\"remarks\\\"></textarea>\\n        </div>\\n    </div>\\n    <span class=\\\"btn-spacer\\\"></span>\\n    <button (click)=\\\"previousTab()\\\" class=\\\"btn btn-link pull-left\\\" aria-controls=\\\"courseSelect\\\" role=\\\"tab\\\">Vorige</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default pull-right\\\" aria-controls=\\\"paymentInfo\\\" role=\\\"tab\\\">Volgende</button>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/contactinfo/contactinfo.component.html\n// module id = 155\n// module chunks = 1","module.exports = \"<h2>Inschrijven cursus</h2>\\n<form class=\\\"form-horizontal\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"courseSelector\\\" class=\\\"col-xs-12 col-sm-3 control-label filter-label\\\">Selecteer cursus</label>\\n        <div class=\\\"col-xs-12 col-sm-5\\\">\\n            <select id=\\\"courseSelector\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCourseTemplate\\\" (ngModelChange)=\\\"selectedCourseTemplateChanged($event)\\\" name=\\\"CourseSelector\\\">\\n                    <option value=\\\"null\\\" selected></option>\\n                    <option *ngFor=\\\"let ct of courseTemplates\\\" [ngValue]=\\\"ct\\\">{{ct.Name}}</option>\\n            </select>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"regionSelector\\\" class=\\\"col-xs-12 col-sm-3 control-label filter-label\\\">Selecteer regio</label>\\n        <div class=\\\"col-xs-12 col-sm-5\\\">\\n            <select id=\\\"regionSelector\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedRegion\\\" (ngModelChange)=\\\"selectedRegionChanged($event)\\\" name=\\\"RegionSelector\\\">\\n                    <option value=\\\"null\\\" selected></option>\\n                    <option *ngFor=\\\"let r of regions\\\" [ngValue]=\\\"r\\\">{{r.Name}}</option>\\n            </select>\\n        </div>\\n    </div>\\n</form>\\n<hr class=\\\"divider\\\" />\\n<div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n                <th>\\n                    <!--selection-->\\n                </th>\\n                <th>Startdatum</th>\\n                <th>Cursus</th>\\n                <th>Regio</th>\\n                <th>Duur</th>\\n                <th>Prijs</th>\\n                <th>\\n                    <!--status-->\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let course of courses\\\" [class.disabled]=\\\"course.IsFull\\\" [class.active]=\\\"course.Id == selectedCourseId\\\">\\n                <td>\\n                    <input type=\\\"radio\\\" name=\\\"courseSelector\\\" [value]=\\\"course.Id\\\" [(ngModel)]=\\\"selectedCourseId\\\" [disabled]=\\\"course.IsFull\\\" (change)=\\\"selectedCourseChanged(course)\\\"></td>\\n                <td>{{course.Date | date: 'dd-MM-yyyy'}}</td>\\n                <td>{{course.Name}}</td>\\n                <td>{{course.Region}}</td>\\n                <td>{{course.DurationInfo}}</td>\\n                <td>{{course.Price | currencyFormat}}</td>\\n                <td><span *ngIf=\\\"course.IsFull\\\">Vol</span></td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n<span class=\\\"btn-spacer\\\"></span>\\n<button class=\\\"btn btn-default pull-right \\\" aria-controls=\\\"contactInfo\\\" role=\\\"tab\\\" [disabled]=\\\"!selectedCourseId\\\" (click)=\\\"nextTab()\\\">Volgende</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/courseselection/courseselection.component.html\n// module id = 156\n// module chunks = 1","module.exports = \"<h2>Factuuradres</h2>\\n<form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"saveInfo(contactForm.valid)\\\" #contactForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-xs-12 col-sm-3 control-label\\\">Adres</label>\\n        <div class=\\\"col-xs-12 col-sm-5 col-md-7\\\">\\n            <ul class=\\\"address-list\\\">\\n                <li>\\n                    T.a.v. {{order?.ContactPerson.Initials}} {{order?.ContactPerson.Surname}}\\n                </li>\\n                <li *ngIf=\\\"order?.Company\\\">\\n                    {{order.Company.Name}}\\n                </li>\\n                <li>\\n                    {{order?.ContactPerson.Address}} {{order?.ContactPerson.AddressNumber}}\\n                </li>\\n                <li>\\n                    {{order?.ContactPerson.PostalCode}}\\n                </li>\\n                <li>\\n                    {{order?.ContactPerson.City}}\\n                </li>\\n            </ul>\\n            <label class=\\\"checkbox-inline\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"diffBillingAddress\\\" value=\\\"billingAddress\\\" (change)=\\\"alternativeBillingAddress = !alternativeBillingAddress\\\"> Gebruik een ander factuuradres\\n            </label>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"alternativeBillingAddress\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Aanhef<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-4 col-md-7\\\">\\n                <label class=\\\"radio-inline\\\">\\n                    <input type=\\\"radio\\\" name=\\\"optionGender\\\" value=\\\"V\\\" [(ngModel)]=\\\"order.InvoicePerson.Gender\\\"> Mevrouw\\n                </label>\\n                <label class=\\\"radio-inline\\\">\\n                    <input type=\\\"radio\\\" name=\\\"optionGender\\\" value=\\\"M\\\" [(ngModel)]=\\\"order.InvoicePerson.Gender\\\"> De heer\\n                </label>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"initialsBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Voorletters<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"initialsBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.Initials\\\" name=\\\"initials\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"firstNameBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Voornaam<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstNameBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.FirstName\\\" name=\\\"firstName\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"middleNameBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Tussenvoegsel<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"middleNameBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.MiddleName\\\" name=\\\"middleName\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastNameBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Achternaam<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastNameBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.Surname\\\" name=\\\"surname\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"companyBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Bedrijf<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyBillAddress\\\" [(ngModel)]=\\\"order.InvoiceCompany.Name\\\" name=\\\"company\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"postalcodeBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Postcode<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-sm-5 col-xs-12 margin-bottom-15\\\">\\n                        <input id=\\\"postalcodeBillAddress\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"order.InvoicePerson.PostalCode\\\" name=\\\"postalcode\\\">\\n                    </div>\\n                    <label for=\\\"numberBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label margin-bottom-15\\\">Nummer<br/><span>Optioneel</span></label>\\n                    <div class=\\\"col-sm-4 col-xs-12\\\">\\n                        <input id=\\\"numberBillAddress\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"order.InvoicePerson.AddressNumber\\\" name=\\\"addressNumber\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"addressBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Straat<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"addressBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.Address\\\" name=\\\"address\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"cityBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Plaats<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cityBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.City\\\" name=\\\"city\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"countryBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Land<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <select class=\\\"form-control\\\" id=\\\"countryBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.CountryId\\\" name=\\\"country\\\">\\n                    <option *ngFor=\\\"let c of countries\\\" [ngValue]=\\\"c.Id\\\">{{c.Name}}</option>\\n                </select>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"emailBusiness.errors && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"emailBusiness.errors && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\">\\n            <label for=\\\"emailBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label\\\">E-mail</label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.Email\\\" name=\\\"emailBusiness\\\" #emailBusiness=\\\"ngModel\\\" required pattern=\\\"[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\\">\\n                <span *ngIf=\\\"emailBusiness.errors && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n                <label *ngIf=\\\"emailBusiness.hasError('required') && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">E-mail is verpllicht.</label>\\n                <label *ngIf=\\\"emailBusiness.hasError('pattern') && (emailBusiness.dirty || emailBusiness.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">Geef een geldig e-mailadres op.</label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"phoneBillAddress\\\" class=\\\"col-xs-12 col-sm-3 control-label optional-label\\\">Telefoon<br/><span>Optioneel</span></label>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneBillAddress\\\" [(ngModel)]=\\\"order.InvoicePerson.Phone\\\" name=\\\"phone\\\">\\n            </div>\\n        </div>\\n    </div>\\n\\n    <hr class=\\\"divider\\\" />\\n    <h2>Kies een betaalmethode</h2>\\n\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover\\\" id=\\\"payment-table\\\">\\n            <tbody>\\n                <tr *ngIf=\\\"false\\\">\\n                    <td><input type=\\\"radio\\\" name=\\\"payment-option\\\" value=\\\"ideal\\\" class=\\\"payment-radio\\\" /></td>\\n                    <td class=\\\"hidden-xs\\\"><img class=\\\"img-responsive payment-img\\\" src=\\\"img/ideal.png\\\" /></td>\\n                    <td id=\\\"iDeal\\\"><span class=\\\"payment-option\\\">iDeal</span> - Online betalen via uw Nederlandse bank\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"false\\\">\\n                    <td><input type=\\\"radio\\\" name=\\\"payment-option\\\" value=\\\"paypal\\\" class=\\\"payment-radio\\\" />\\n                    </td>\\n                    <td class=\\\"hidden-xs\\\"><img class=\\\"img-responsive payment-img\\\" src=\\\"img/paypal.png\\\" />\\n                    </td>\\n                    <td id=\\\"PayPal\\\"><span class=\\\"payment-option\\\">PayPal</span> - Veilig betalen via uw PayPal account\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"false\\\">\\n                    <td><input type=\\\"radio\\\" name=\\\"payment-option\\\" value=\\\"bancontact\\\" class=\\\"payment-radio\\\" />\\n                    </td>\\n                    <td class=\\\"hidden-xs\\\"><img class=\\\"img-responsive payment-img\\\" src=\\\"img/bancontact.png\\\" />\\n                    </td>\\n                    <td id=\\\"BanContact\\\"><span class=\\\"payment-option\\\">BanContact</span> - Betaal veilig met uw eigen bank\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"false\\\">\\n                    <td><input type=\\\"radio\\\" name=\\\"payment-option\\\" value=\\\"afterpay\\\" class=\\\"payment-radio\\\" />\\n                    </td>\\n                    <td class=\\\"hidden-xs\\\"><img class=\\\"img-responsive payment-img\\\" src=\\\"img/afterpay.jpg\\\" />\\n                    </td>\\n                    <td id=\\\"AfterPay\\\"><span class=\\\"payment-option\\\">AfterPay</span> - Betaal achteraf via internet bankieren of bankoverschrijving\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"false\\\">\\n                    <td><input type=\\\"radio\\\" name=\\\"payment-option\\\" value=\\\"creditcard\\\" class=\\\"payment-radio\\\" />\\n                    </td>\\n                    <td class=\\\"hidden-xs\\\"><img class=\\\"img-responsive payment-img\\\" src=\\\"img/creditcard.jpg\\\" />\\n                    </td>\\n                    <td id=\\\"creditcard\\\"><span class=\\\"payment-option\\\">Creditcard</span> - Snel en eenvoudig betalen met uw eigen creditcard\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><input type=\\\"radio\\\" name=\\\"payment-option\\\" value=\\\"factuur\\\" class=\\\"payment-radio\\\" checked />\\n                    </td>\\n                    <td class=\\\"hidden-xs\\\" id=\\\"invoice\\\"><span class=\\\"payment-option\\\">Factuur</span></td>\\n                    <td class=\\\"hidden-xs\\\">Ontvang een factuur per e-mail</td>\\n                    <td class=\\\"visible-xs-block\\\" id=\\\"invoice-2\\\"><span class=\\\"payment-option\\\">Factuur</span> - Ontvang een factuur per e-mail\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <span class=\\\"btn-spacer\\\"></span>\\n\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"conditions.errors && (conditions.dirty || conditions.touched || contactForm.submitted)\\\" [class.has-feedback]=\\\"conditions.errors && (conditions.dirty || conditions.touched || contactForm.submitted)\\\">\\n        <label for=\\\"conditions\\\" class=\\\"col-xs-12 col-sm-3 control-label\\\">Voorwaarden</label>\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n            <label class=\\\"checkbox-inline\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"conditions\\\" [(ngModel)]=\\\"conditionsAgreed\\\" name=\\\"conditions\\\" required #conditions=\\\"ngModel\\\"> Ik ga akkoord met de <a href=\\\"#\\\" target=\\\"_blank\\\">algemene voorwaarden</a>\\n            </label>\\n            <label *ngIf=\\\"conditions.errors && (conditions.dirty || conditions.touched || contactForm.submitted)\\\" class=\\\"control-label\\\">U dient akkoord te gaan met de algemene voorwaarden.</label>\\n        </div>\\n    </div>\\n\\n    <button (click)=\\\"previousTab()\\\" class=\\\"btn btn-link pull-left\\\" aria-controls=\\\"courseSelect\\\" role=\\\"tab\\\">Vorige</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default pull-right\\\" aria-controls=\\\"paymentInfo\\\" role=\\\"tab\\\">Volgende</button>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/paymentinfo/paymentinfo.component.html\n// module id = 157\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nimport { Course } from '../bll/course';\nimport { Order } from '../bll/order';\n\n@Injectable()\nexport class GlobalFunctionsService {\n\n    private updateSelectedCourseFunction = new Subject();\n    private enableTabsFunction = new Subject();\n    private activateTabFunction = new Subject();\n    private orderFunction = new Subject();\n    private studentsFunction = new Subject();\n    \n    updateSelectedCourse(selectedCourse: Course) {\n        this.updateSelectedCourseFunction.next(selectedCourse);\n    }\n\n    selectedCourseUpdated(): Observable<Course> {\n        return this.updateSelectedCourseFunction.asObservable();\n    }\n\n    enableTabs(tabCount: number) {\n        this.enableTabsFunction.next(tabCount);\n    }\n\n    enabledTabsChanged(): Observable<number> {\n        return this.enableTabsFunction.asObservable();\n    }\n\n    activateTab(tabName: string) {\n        this.activateTabFunction.next(tabName);\n    }\n\n    activeTabChanged(): Observable<string> {\n        return this.activateTabFunction.asObservable();\n    }\n\n    updateOrder(order: Order) {\n        this.orderFunction.next(order);\n    }\n\n    orderUpdated(): Observable<Order> {\n        return this.orderFunction.asObservable();\n    }\n\n    updateStudentCount(count: number) {\n        this.studentsFunction.next(count);\n    }\n\n    studentCountUpdated(): Observable<number> {\n        return this.studentsFunction.asObservable();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/global-functions.service.ts","export class Student {\n    FirstName: string;\n    Initials: string;\n    Surname: string;\n    MiddleName: string;\n    Gender: string;\n    DateOfBirth: Date;\n    PlaceOfBirth: string;\n    Email: string;\n    Phone: string;\n    Address: string;\n    AddressNumber: string;\n    PostalCode: string;\n    City: string;\n    CountryId: string;\n    CourseId: number;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bll/student.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\nimport { Country } from '../bll/country';\n\n@Injectable()\nexport class CountryService{\n    constructor(private http: Http) { }\n\n    private countryApiUrl = environment.apiUrl + '/v1/Countries';\n    private headers = new Headers(\n        {\n            'Content-Type': 'application/json',\n            'Authorization-ApiKey': environment.apiKey\n        });\n\n    public getCountries(): Promise<Country[]> {\n         return this.http.get(this.countryApiUrl, { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as Country[])\n            .catch(this.handleError);\n    }\n        \n    private handleError(error: any): Promise<any>{\n        console.error('An error occurred', error); // for demo purposes only\n        \n        return Promise.reject(error.message || error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/country.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 75;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 75\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Form } from '@angular/forms';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { environment } from '../environments/environment';\nimport { GlobalFunctionsService } from './services/global-functions.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [GlobalFunctionsService]\n})\n\nexport class AppComponent implements OnInit, OnDestroy {\n  constructor(\n    private globalFunctionsService: GlobalFunctionsService\n  ) {\n    this.subscription = this.globalFunctionsService.enabledTabsChanged().subscribe(enabledTabCount => this.enabledTabCount = enabledTabCount);\n    this.subscriptionActiveTab = this.globalFunctionsService.activeTabChanged().subscribe(activeTab => this.selectTab(activeTab));\n  }\n\n  subscription: Subscription;\n  subscriptionActiveTab: Subscription;\n  enabledTabCount: number = 1;\n  selectedTab: string = 'courseSelect'; // TODO: Reset to 'courseSelect'; (contactInfo, paymentInfo, signupConfirmed)\n  providerContactMail: string;\n  errors: boolean = false;\n\n  selectTab(selectedTab: string): void {\n    console.debug('Selected tab: ' + selectedTab);\n\n    let tabIndex = 0;\n    switch (selectedTab) {\n      case 'courseSelect':\n        tabIndex = 1;\n        break;\n      case 'contactInfo':\n        tabIndex = 2;\n        break;\n      case 'paymentInfo':\n        tabIndex = 3;\n        break;\n      case 'signupConfirmed':\n        this.errors = false;  \n        tabIndex = 4;\n        break;\n      case 'signupFailed':\n        this.errors = true;  \n        tabIndex = 4;\n        break;\n    }\n\n    if ((tabIndex <= this.enabledTabCount && this.enabledTabCount != 4) || (tabIndex == 4 && this.enabledTabCount == 4)) {\n      this.selectedTab = selectedTab;\n    }\n  }\n\n  ngOnInit(): void {\n    this.providerContactMail = environment.contactEmail;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.subscriptionActiveTab.unsubscribe();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { CurrencyFormat } from './helpers/currencyformat';\nimport { DutchDateFormat } from './helpers/dutchdateformat';\nimport { AppComponent } from './app.component';\nimport { BasketComponent } from './basket/basket.component';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { ContactinfoComponent } from './contactinfo/contactinfo.component';\nimport { CourseselectionComponent } from './courseselection/courseselection.component';\nimport { PaymentinfoComponent } from './paymentinfo/paymentinfo.component';\n\n@NgModule({\n  declarations: [\n    CurrencyFormat,\n    DutchDateFormat, \n    AppComponent, BasketComponent, ConfirmationComponent, ContactinfoComponent, CourseselectionComponent, PaymentinfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Course } from '../bll/course';\nimport { Order } from '../bll/order';\nimport { GlobalFunctionsService } from '../services/global-functions.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'fo-basket',\n    templateUrl: './basket.component.html'\n})\n\nexport class BasketComponent implements OnDestroy {\n\n    constructor(\n        private globalFunctionsService: GlobalFunctionsService\n    ) {\n        this.subscription = this.globalFunctionsService.selectedCourseUpdated().subscribe(course => this.selectedCourse = course);\n        this.subscriptionStudentCount = this.globalFunctionsService.studentCountUpdated().subscribe(count => this.studentCount = count);\n    }\n\n    subscription: Subscription;\n    subscriptionOrder: Subscription;\n    subscriptionStudentCount: Subscription;\n    selectedCourse: Course;\n    studentCount: number = 0;\n        \n    updateCourseInfo(course: Course) {\n        this.selectedCourse = course;\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n        this.subscriptionStudentCount.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/basket/basket.component.ts","export class Company {\n    Name: string;\n    Address: string;\n    AddressNumber: string;\n    PostalCode: string;\n    City: string;\n    CountryId: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bll/company.ts","export class ContactPerson {\n    FirstName: string;\n    Initials: string;\n    Surname: string;\n    MiddleName: string;\n    Gender: string;\n    Email: string;\n    Phone: string;\n    Address: string;\n    AddressNumber: string;\n    PostalCode: string;\n    City: string;\n    CountryId: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bll/contactperson.ts","import { ContactPerson } from './contactperson';\nimport { Company } from './company';\nimport { Student } from './student';\n\nexport class Order {\n    OrderType: string;\n    InvoiceReference: string;\n    ContactPerson: ContactPerson;\n    Company: Company;\n    InvoicePerson: ContactPerson;\n    InvoiceCompany: Company;\n    Students: Student[];\n    Remarks: string;\n    FirstStudentIsContact: boolean;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bll/order.ts","import { Component, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { GlobalFunctionsService } from '../services/global-functions.service';\nimport { Order } from '../bll/order';\nimport { Course } from '../bll/course';\n\n@Component({\n    moduleId: module.id,\n    selector: 'fo-confirmation',\n    templateUrl: './confirmation.component.html'\n})\n\nexport class ConfirmationComponent implements OnDestroy {\n    constructor(\n        private globalFunctionsService: GlobalFunctionsService\n    ) {\n        this.subscription = this.globalFunctionsService.orderUpdated().subscribe(order => this.order = order);\n        this.subscriptionCourse = this.globalFunctionsService.selectedCourseUpdated().subscribe(course => this.course = course);\n    }\n\n    subscription: Subscription;\n    subscriptionCourse: Subscription;\n    order: Order;\n    course: Course;\n\n    ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n        this.subscriptionCourse.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/confirmation/confirmation.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Country } from '../bll/country';\nimport { CountryService } from '../services/country.service';\nimport { Order } from '../bll/order';\nimport { ContactPerson } from '../bll/contactperson';\nimport { Company } from '../bll/company';\nimport { Student } from '../bll/student';\nimport { GlobalFunctionsService } from '../services/global-functions.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'fo-contactinfo',\n    templateUrl: './contactinfo.component.html',\n    providers: [CountryService]\n})\n\nexport class ContactinfoComponent implements OnInit, OnDestroy {\n\n    constructor(\n        private countryService: CountryService,\n        private globalFunctionsService: GlobalFunctionsService\n    ) { }\n    \n    countries: Country[];\n    selectedCountry: Country;\n    addMultipleStudents: boolean;\n\n    order: Order = new Order();\n    contactAddressNumber: string;\n\n    getCountries(): void {\n        this.countryService.getCountries().then(countries => this.countries = countries);\n    }\n\n    toggleSelf(): void {\n        this.globalFunctionsService.updateStudentCount((this.order.Students ? this.order.Students.length : 0) + (this.order.FirstStudentIsContact ? 1 : 0));\n    }\n\n    toggleStudents(): void {\n        this.addMultipleStudents != this.addMultipleStudents;\n        if (this.addMultipleStudents) {\n            let student = new Student();\n            student.CountryId = 'NL';\n            this.order.Students = [student];\n            this.globalFunctionsService.updateStudentCount(this.order.Students.length + (this.order.FirstStudentIsContact ? 1 : 0));\n        }\n        else {\n            this.order.Students = [];\n            this.globalFunctionsService.updateStudentCount(this.order.Students.length + (this.order.FirstStudentIsContact ? 1 : 0));\n        }\n    }\n\n    addStudent(): void {\n        let student = new Student();\n        student.CountryId = 'NL';\n        this.order.Students.push(student);\n\n        this.globalFunctionsService.updateStudentCount(this.order.Students.length + (this.order.FirstStudentIsContact ? 1 : 0));\n    }\n\n    removeStudent(student: Student): void {\n        this.order.Students = this.order.Students.filter(s => s !== student);\n        this.addMultipleStudents = this.order.Students.length > 0;\n\n        this.globalFunctionsService.updateStudentCount(this.order.Students.length + (this.order.FirstStudentIsContact ? 1 : 0));\n    }\n\n    saveInfo(isValid: boolean): void {\n        if (isValid) {\n            console.debug(\"Info Saved.\");\n            this.globalFunctionsService.updateOrder(this.order);\n            this.globalFunctionsService.enableTabs(3);\n            this.globalFunctionsService.activateTab('paymentInfo');\n        }\n        else\n            console.debug(\"Not Valid!\");\n    }\n\n    previousTab(): void {\n            this.globalFunctionsService.activateTab('courseSelect');\n    }\n\n    ngOnInit(): void {\n\n        // Initial Values\n        this.order.OrderType = 'Private';\n        this.order.ContactPerson = new ContactPerson();\n        this.order.ContactPerson.CountryId = 'NL';\n        this.order.Company = new Company();\n        this.order.Company.CountryId = 'NL';\n        this.order.InvoicePerson = new ContactPerson();\n        this.order.InvoicePerson.CountryId = 'NL';\n        this.order.InvoiceCompany = new Company();\n        this.order.InvoiceCompany.CountryId = 'NL';\n        \n        this.getCountries();\n    }\n\n    ngOnDestroy(): void {\n\n    }    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/contactinfo/contactinfo.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Form } from '@angular/forms';\n\nimport { CourseTemplate } from '../bll/coursetemplate';\nimport { CourseTemplateService } from '../services/coursetemplate.service';\nimport { Region } from '../bll/region';\nimport { RegionService } from '../services/region.service';\nimport { Course } from '../bll/course';\nimport { CourseService } from '../services/course.service';\nimport { GlobalFunctionsService } from '../services/global-functions.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'fo-courseselection',\n    templateUrl: './courseselection.component.html',\n    providers: [CourseTemplateService, RegionService, CourseService]\n})\n\nexport class CourseselectionComponent implements OnInit {\n constructor(\n    private courseTemplateService: CourseTemplateService,\n    private regionService: RegionService,\n    private courseService: CourseService,\n    private globalFunctionsService: GlobalFunctionsService\n ) { }\n\n  selectedCourseTemplate: CourseTemplate;\n  courseTemplates: CourseTemplate[];\n  selectedRegion: Region;\n  regions: Region[];\n  courses: Course[];\n  selectedCourseId: number;\n\n  getCourseTemplates(): void {\n    this.courseTemplateService.getCourseTemplates().then(courseTemplates => this.courseTemplates = courseTemplates);\n  }\n\n  getRegions(): void {\n    this.regionService.getRegions().then(regions => this.setRegion(regions));\n  }\n\n  setRegion(regions: Region[]): void {\n\n      this.regions = regions    \n\n      if (this.regions && this.selectedRegion) {\n        let regionIndex = this.regions.findIndex(region => region.Id == this.selectedRegion.Id).toString();\n        this.selectedRegion = regions[2];\n    }\n  }\n\n  getCourses(courseTemplateId: number, regionId: string): void {\n    if (courseTemplateId == null && regionId == null)\n      this.courseService.getCourses().then(courses => this.courses = courses);\n    else if (regionId == null)\n      this.courseService.getCoursesByCourseTemplate(courseTemplateId).then(courses => this.courses = courses);\n    else if (courseTemplateId == null)  \n      this.courseService.getCoursesByRegion(regionId).then(courses => this.courses = courses);\n    else  \n      this.courseService.getCoursesByCourseTemplateAndRegion(courseTemplateId, regionId).then(courses => this.courses = courses);\n  }\n  \n  selectedCourseTemplateChanged(courseTemplate: CourseTemplate): void {\n    if (courseTemplate.Id != undefined) {\n      this.regionService.getRegionsByCourseTemplate(courseTemplate.Id).then(regions => this.regions = regions);\n      this.getCourses(courseTemplate.Id, this.selectedRegion ? this.selectedRegion.Id : null);\n    }\n    else {\n      this.getRegions();\n      this.getCourses(null, this.selectedRegion ? this.selectedRegion.Id : null);\n    }\n  }\n\n  selectedRegionChanged(region: Region): void {\n    if (region.Id != undefined) {\n      this.getCourses(this.selectedCourseTemplate ? this.selectedCourseTemplate.Id : null, region.Id);\n    }  \n    else {\n      this.getCourses(this.selectedCourseTemplate ? this.selectedCourseTemplate.Id : null, null);\n    } \n  }\n\n  selectedCourseChanged(course: Course): void {\n      this.globalFunctionsService.updateSelectedCourse(course);\n      this.globalFunctionsService.enableTabs(2);\n  }\n\n  nextTab(): void {\n      this.globalFunctionsService.activateTab('contactInfo');\n  }\n\n  ngOnInit(): void {\n    this.selectedCourseTemplate = null;   \n    this.selectedRegion = null;\n\n    this.getCourseTemplates();\n    this.getRegions();\n    this.getCourses(null, null);\n  }  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/courseselection/courseselection.component.ts","import {Pipe} from '@angular/core';\n\n@Pipe({\n    name: 'currencyFormat'\n})\nexport class CurrencyFormat {\n    transform(value: number,\n        currencySign: string = '€ ',\n        decimalLength: number = 2, \n        chunkDelimiter: string = '.', \n        decimalDelimiter:string = ',',\n        chunkLength: number = 3): string {\n\n        //value /= 100;\n\n        let result = '\\\\d(?=(\\\\d{' + chunkLength + '})+' + (decimalLength > 0 ? '\\\\D' : '$') + ')'\n        let num = value.toFixed(Math.max(0, ~~decimalLength));\n\n        return currencySign+(decimalDelimiter ? num.replace('.', decimalDelimiter) : num).replace(new RegExp(result, 'g'), '$&' + chunkDelimiter);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/helpers/currencyformat.ts","import {Pipe} from '@angular/core';\n\n@Pipe({\n    name: 'dutchDateFormat'\n})\nexport class DutchDateFormat {\n    transform(value: Date,\n        //currencySign: string = '€ ',\n        //decimalLength: number = 2, \n        //chunkDelimiter: string = '.', \n        //decimalDelimiter:string = ',',\n        //chunkLength: number = 3\n    ): string {\n            var date = value instanceof Date ? value : new Date(value);\n\n            let dayPart = date.getDate();\n            let monthPart = date.getMonth();\n            let yearPart = date.getFullYear();\n\n            // Translate Month\n            let monthName = '';\n            switch (monthPart) {\n                case 0:\n                    monthName = 'januari';\n                    break;\n                case 1:\n                    monthName = 'februari';\n                    break;\n                case 2:\n                    monthName = 'maart';\n                    break;\n                case 3:\n                    monthName = 'april';\n                    break;\n                case 4:\n                    monthName = 'mei';\n                    break;\n                case 5:\n                    monthName = 'juni';\n                    break;\n                case 6:\n                    monthName = 'juli';\n                    break;\n                case 7:\n                    monthName = 'augustus';\n                    break;\n                case 8:\n                    monthName = 'september';\n                    break;\n                case 9:\n                    monthName = 'oktober';\n                    break;\n                case 10:\n                    monthName = 'november';\n                    break;\n                case 12:\n                    monthName = 'december';\n                    break;\n            }\n \n            return dayPart + ' ' + monthName + ' ' + yearPart;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/helpers/dutchdateformat.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Order } from '../bll/order';\nimport { ContactPerson } from '../bll/contactperson';\nimport { Company } from '../bll/company';\nimport { Country } from '../bll/country';\nimport { Student } from '../bll/student';\nimport { Course } from '../bll/course';\nimport { CountryService } from '../services/country.service';\nimport { GlobalFunctionsService } from '../services/global-functions.service';\nimport { EnrolService } from '../services/enrol.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'fo-paymentinfo',\n    templateUrl: './paymentinfo.component.html',\n    providers: [CountryService, EnrolService]\n})\n\nexport class PaymentinfoComponent implements OnInit, OnDestroy {\n    constructor(\n        private countryService: CountryService,\n        private globalFunctionsService: GlobalFunctionsService,\n        private enrolService: EnrolService\n    ) {\n        this.subscription = this.globalFunctionsService.orderUpdated().subscribe(order => this.order = order);\n        this.subscriptionCourse = this.globalFunctionsService.selectedCourseUpdated().subscribe(course => this.course = course);\n    }\n    \n    subscription: Subscription;\n    subscriptionCourse: Subscription;\n    order: Order;\n    alternativeBillingAddress: boolean;\n    countries: Country[];\n    conditionsAgreed: boolean;\n    course: Course;\n\n    getCountries(): void {\n        this.countryService.getCountries().then(countries => this.countries = countries);\n    }\n\n    saveInfo(isValid: boolean): void {\n        if (isValid) {\n            console.debug(\"Info Saved.\");\n\n            try {\n\n                // Create Correct Order-Message\n                if (!this.order.Company.Name) {\n                    // Clear Company\n                    this.order.Company = null;\n                }\n                if (!this.order.InvoiceCompany.Name) {\n                    // Clear Invoice Company\n                    this.order.InvoiceCompany = null;\n                }\n                else {\n                    // Copy Address to Invoice Company\n                    this.order.InvoiceCompany.Address = this.order.InvoicePerson.Address;\n                    this.order.InvoiceCompany.AddressNumber = this.order.InvoicePerson.AddressNumber;\n                    this.order.InvoiceCompany.PostalCode = this.order.InvoicePerson.PostalCode;\n                    this.order.InvoiceCompany.City = this.order.InvoicePerson.City;\n                    this.order.InvoiceCompany.CountryId = this.order.InvoicePerson.CountryId;\n                }\n                if (!this.order.InvoicePerson.Surname) {\n                    // Clear Invoice Person\n                    this.order.InvoicePerson = null;\n                }\n                if (this.order.FirstStudentIsContact) {\n                    // Create Student from Contact\n                    let student = new Student();\n                    student.FirstName = this.order.ContactPerson.FirstName;\n                    student.Initials = this.order.ContactPerson.Initials;\n                    student.Surname = this.order.ContactPerson.Surname;\n                    student.MiddleName = this.order.ContactPerson.MiddleName;\n                    student.Gender = this.order.ContactPerson.Gender;\n                    student.Email = this.order.ContactPerson.Email;\n                    student.Phone = this.order.ContactPerson.Phone;\n                    student.Address = this.order.ContactPerson.Address;\n                    student.AddressNumber = this.order.ContactPerson.AddressNumber;\n                    student.PostalCode = this.order.ContactPerson.PostalCode;\n                    student.City = this.order.ContactPerson.City;\n                    student.CountryId = this.order.ContactPerson.CountryId;\n\n                    // Add Contact to Students Array\n                    if (!this.order.Students)\n                        this.order.Students = [];\n                    this.order.Students.splice(0, 0, student);\n                }\n\n                // Set Course for Students\n                this.order.Students.forEach(student => {\n                    student.CourseId = this.course.Id;\n                });\n\n                // Save Order\n                console.debug(JSON.stringify(this.order));\n\n                this.enrolService.create(this.order)\n                    .then(response => {\n                        this.globalFunctionsService.updateOrder(this.order);\n\n                        // Show Summary\n                        this.globalFunctionsService.enableTabs(4);\n                        this.globalFunctionsService.activateTab('signupConfirmed');\n                    })\n                    .catch(response => {\n                        console.debug('Save Failed');\n                        this.globalFunctionsService.enableTabs(4);\n                        this.globalFunctionsService.activateTab('signupFailed');\n                    });\n            } catch (error) {\n                this.globalFunctionsService.enableTabs(4);\n                this.globalFunctionsService.activateTab('signupFailed');\n            }    \n        }\n        else\n            console.debug(\"Not Valid!\");\n    }\n    \n    previousTab(): void {\n        this.globalFunctionsService.activateTab('contactInfo');\n    }\n    \n    ngOnInit(): void {\n        this.getCountries();\n    }\n\n    ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n        this.subscriptionCourse.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/paymentinfo/paymentinfo.component.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\nimport { Course } from '../bll/course';\n\n@Injectable()\nexport class CourseService{\n    constructor(private http: Http) { }\n\n    private courseApiUrl = environment.apiUrl + '/v1/Courses';\n    private courseTemplateApiUrl = environment.apiUrl + '/v1/CourseTemplates';\n    private regionsApiUrl = environment.apiUrl + '/v1/Regions';\n    private headers = new Headers(\n        {\n            'Content-Type': 'application/json',\n            'Authorization-ApiKey': environment.apiKey\n        });\n\n    public getCourses(): Promise<Course[]> {\n        return this.http.get(this.courseApiUrl, { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as Course[])\n            .catch(this.handleError);\n    }\n\n    public getCoursesByCourseTemplate(courseTemplateId: number): Promise<Course[]> {\n        return this.http.get(this.courseTemplateApiUrl + '/' + courseTemplateId + '/Courses', { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as Course[])\n            .catch(this.handleError);\n    }\n\n    public getCoursesByCourseTemplateAndRegion(courseTemplateId: number, regionId: string): Promise<Course[]> {\n        return this.http.get(this.courseTemplateApiUrl + '/' + courseTemplateId + '/Regions/' + regionId + '/Courses', { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as Course[])\n            .catch(this.handleError);\n    }\n\n    public getCoursesByRegion(regionId: string): Promise<Course[]> {\n        return this.http.get(this.regionsApiUrl + '/' + regionId + '/Courses', { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as Course[])\n            .catch(this.handleError);\n    }\n\n    private handleError(error: any): Promise<any>{\n        console.error('An error occurred', error); // for demo purposes only\n        \n        return Promise.reject(error.message || error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/course.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\nimport { CourseTemplate } from '../bll/coursetemplate';\n\n@Injectable()\nexport class CourseTemplateService {\n    constructor(private http: Http) { }\n\n    private courseTemplateApiUrl = environment.apiUrl + '/v1/CourseTemplates';\n    private headers = new Headers(\n        {\n            'Content-Type': 'application/json',\n            'Authorization-ApiKey': environment.apiKey\n        });\n\n    public getCourseTemplates(): Promise<CourseTemplate[]> {\n        return this.http.get(this.courseTemplateApiUrl, { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as CourseTemplate[])\n            .catch(this.handleError);\n    }\n        \n    private handleError(error: any): Promise<any>{\n        console.error('An error occurred', error); // for demo purposes only\n        \n        return Promise.reject(error.message || error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/coursetemplate.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\nimport { Order } from '../bll/order';\nimport { ApiMessage } from '../bll/api-message';\n\n@Injectable()\nexport class EnrolService {\n    constructor(private http: Http) { }\n\n    private enrolApiUrl = environment.apiUrl + '/v1/Enrol';\n    private headers = new Headers(\n        {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization-ApiKey': environment.apiKey\n        });\n    \n    public create(order: Order): Promise<any> {\n        return this.http.post(this.enrolApiUrl, JSON.stringify(order), { headers: this.headers })\n            .toPromise()\n            .then(res => res.status)\n            .catch(this.handleError);\n    }\n\n    private handleError(error: any): Promise<any>{\n        console.error('An error occurred', error); // for demo purposes only\n        \n        return Promise.reject(error.message || error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/enrol.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\nimport { Region } from '../bll/region';\n\n@Injectable()\nexport class RegionService{\n    constructor(private http: Http) { }\n\n    private regionApiUrl = environment.apiUrl + '/v1/Regions';\n    private courseTemplateApiUrl = environment.apiUrl + '/v1/CourseTemplates';\n    private headers = new Headers(\n        {\n            'Content-Type': 'application/json',\n            'Authorization-ApiKey': environment.apiKey\n        });\n\n    public getRegions(): Promise<Region[]> {\n         return this.http.get(this.regionApiUrl, { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as Region[])\n            .catch(this.handleError);\n    }\n\n    public getRegionsByCourseTemplate(courseTemplateId: number): Promise<Region[]> {\n        return this.http.get(this.courseTemplateApiUrl + '/' + courseTemplateId + '/Regions', { headers: this.headers })\n            .toPromise()\n            .then(response => response.json() as Region[])\n            .catch(this.handleError);\n    }\n        \n    private handleError(error: any): Promise<any>{\n        console.error('An error occurred', error); // for demo purposes only\n        \n        return Promise.reject(error.message || error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/region.service.ts"],"sourceRoot":""}